//TIC TAC TOE GAME
//BY FATIMAA KHAN

#include <iostream>
#include<cstdlib>
#include <ctime>

using namespace std;

//All of the functions that will be used
void drawBoard(char *spaces);
void playerMove(char *spaces, char player);
void computerMove(char *spaces, char computer);
bool checkWinner(char *spaces, char player, char computer);
bool checkTie(char *spaces);
bool checkLine(char a, char b, char c, char player);

int main() {
//initiallizing players moves to x, computers moves to o and spaces to be 9 to represent each box in the game
    char spaces[9] = {' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '};
    char player = 'X';
    char computer = 'O';

    drawBoard(spaces);

    while (true) {
        playerMove(spaces, player);
        drawBoard(spaces);
        if (checkWinner(spaces, player, computer) || checkTie(spaces)) {
            break;
        }

        computerMove(spaces, computer);
        drawBoard(spaces);
        if (checkWinner(spaces, player, computer) || checkTie(spaces)) {
            break;
        }
    }

    return 0;
}

//function to draw the main board of the game
void drawBoard(char *spaces) {
    cout << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[0] << "  |  " << spaces[1] << "  |  " << spaces[2] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[3] << "  |  " << spaces[4] << "  |  " << spaces[5] << endl;
    cout << "_____|_____|_____" << endl;
    cout << "     |     |     " << endl;
    cout << "  " << spaces[6] << "  |  " << spaces[7] << "  |  " << spaces[8] << endl;
    cout << "     |     |     " << endl;
    cout << endl;
}

//function to allow user input
void playerMove(char *spaces, char player) {
    int number;
    do {
        cout << "Enter a spot to place a mark (1 to 9): ";
        cin >> number;
        number--;
        if (spaces[number] == ' ') {
            spaces[number] = player;
            break;
        }
    } while (!(number >= 0 && number < 9));
}

//function for random generation (computers input), here i have used rand to generate a random number so that 
//all computer tries remain unique and unbiased
void computerMove(char *spaces, char computer) {
    int number;
    srand(time(0));
    while (true) {
        number = rand() % 9;
        if (spaces[number] == ' ') {
            spaces[number] = computer;
            break;
        }
    }
}

//checking if the x's or o's match horizontally vertically or diagonally to determine a winner

bool checkWinner(char *spaces, char player, char computer) {
    if (checkLine(spaces[0], spaces[1], spaces[2], player) || 
        checkLine(spaces[3], spaces[4], spaces[5], player) || 
        checkLine(spaces[6], spaces[7], spaces[8], player) || 
        checkLine(spaces[0], spaces[3], spaces[6], player) || 
        checkLine(spaces[1], spaces[4], spaces[7], player) || 
        checkLine(spaces[2], spaces[5], spaces[8], player) || 
        checkLine(spaces[0], spaces[4], spaces[8], player) || 
        checkLine(spaces[2], spaces[4], spaces[6], player)) {
        cout << "You win!\n";
        return true;
    } else if (checkLine(spaces[0], spaces[1], spaces[2], computer) || 
               checkLine(spaces[3], spaces[4], spaces[5], computer) || 
               checkLine(spaces[6], spaces[7], spaces[8], computer) || 
               checkLine(spaces[0], spaces[3], spaces[6], computer) || 
               checkLine(spaces[1], spaces[4], spaces[7], computer) || 
               checkLine(spaces[2], spaces[5], spaces[8], computer) || 
               checkLine(spaces[0], spaces[4], spaces[8], computer) || 
               checkLine(spaces[2], spaces[4], spaces[6], computer)) {
        cout << "You lose!\n";
        return true;
    } else {
        return false;
    }
}

bool checkLine(char a, char b, char c, char player) {
    return (a == player && b == player && c == player);
}

bool checkTie(char *spaces) {
    for (int i = 0; i < 9; i++) {
        if (spaces[i] == ' ') {
            return false;
        }
    }
    cout << "It's a tie!\n";
    return true;
}
